# Time complexity : O(n)
# It is essential to reduce time complexity to O(log n)

# n = int(input())

# fibo = [0, 1]
# k = 0

# while k < n :
#     fibo[k % 2] = sum(fibo)
#     k += 1
    
# print(fibo[n % 2])

# 피사노 주기

# 주기의 길이를 P라고 하면 N번째 피보나치 수를 M으로 나눈 나머지는 
# N % P번째 피보나치 수를 M으로 나눈 나머지와 같다.
# M = 10^k (k>2) 일때, 항상 P = 15 * 10^(k-1)이다.

# N번째 피보나치 수를 1,000,000으로 나눈 나머지는 N % 1,500,000번째 피보나치 수를 1,000,000으로 나눈 나머지와 같다.
# N번째 피보나치 수를 100,000으로 나눈 나머지는 N % 150,000번째 피보나치 수를 100,000으로 나눈 나머지와 같다.
# N번째 피보나치 수를 10,000으로 나눈 나머지는 N % 15,000번째 피보나치 수를 10,000으로 나눈 나머지와 같다.
# N번째 피보나치 수를 1,000으로 나눈 나머지는 N % 1,500번째 피보나치 수를 1,000으로 나눈 나머지와 같다.

n = int(input()) % 1500000

fibo = [0, 1]

for k in range(n) :
    fibo[k % 2] = sum(fibo) % 1000000
    
print(fibo[n % 2])